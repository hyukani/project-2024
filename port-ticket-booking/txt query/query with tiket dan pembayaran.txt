-- Query yang nambah tabel tiket dan pembayaran --



--
-- PostgreSQL database dump
--

-- Dumped from database version 15.9 (Debian 15.9-1.pgdg120+1)
-- Dumped by pg_dump version 15.9 (Debian 15.9-1.pgdg120+1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', 'public', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Menghapus Fungsi Jika Ada
--

DROP FUNCTION IF EXISTS public.generate_id_admin() CASCADE;
DROP FUNCTION IF EXISTS public.generate_id_kapal() CASCADE;
DROP FUNCTION IF EXISTS public.generate_id_pelanggan() CASCADE;
DROP FUNCTION IF EXISTS public.generate_id_tiket() CASCADE;
DROP FUNCTION IF EXISTS public.generate_id_pembayaran() CASCADE;

--
-- Menghapus Trigger Jika Ada
--

DROP TRIGGER IF EXISTS admin_id_trigger ON public.admin CASCADE;
DROP TRIGGER IF EXISTS kapal_id_trigger ON public.kapal CASCADE;
DROP TRIGGER IF EXISTS pelanggan_id_trigger ON public.pelanggan CASCADE;
DROP TRIGGER IF EXISTS pembayaran_id_trigger ON public.pembayaran CASCADE;
DROP TRIGGER IF EXISTS tiket_id_trigger ON public.tiket CASCADE;

--
-- Menghapus Tabel Jika Ada
--

DROP TABLE IF EXISTS public.tiket CASCADE;
DROP TABLE IF EXISTS public.pembayaran CASCADE;
DROP TABLE IF EXISTS public.schedule CASCADE;
DROP TABLE IF EXISTS public.pelanggan CASCADE;
DROP TABLE IF EXISTS public.kelas CASCADE;
DROP TABLE IF EXISTS public.kapal CASCADE;
DROP TABLE IF EXISTS public.admin CASCADE;

--
-- Menghapus Sequence Jika Ada
--

DROP SEQUENCE IF EXISTS public.tiket_seq CASCADE;
DROP SEQUENCE IF EXISTS public.pembayaran_seq CASCADE;
DROP SEQUENCE IF EXISTS public.schedule_id_schedule_seq CASCADE;
DROP SEQUENCE IF EXISTS public.pelanggan_seq CASCADE;
DROP SEQUENCE IF EXISTS public.kelas_seq CASCADE;
DROP SEQUENCE IF EXISTS public.kelas_id_kelas_seq CASCADE;
DROP SEQUENCE IF EXISTS public.kapal_seq CASCADE;
DROP SEQUENCE IF EXISTS public.admin_seq CASCADE;

--
-- Membuat Sequence
--

-- Sequence admin_seq
CREATE SEQUENCE public.admin_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Sequence kapal_seq
CREATE SEQUENCE public.kapal_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Sequence kelas_id_kelas_seq
CREATE SEQUENCE public.kelas_id_kelas_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Sequence kelas_seq
CREATE SEQUENCE public.kelas_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Sequence pelanggan_seq
CREATE SEQUENCE public.pelanggan_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Sequence schedule_id_schedule_seq
CREATE SEQUENCE public.schedule_id_schedule_seq
    AS integer
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Sequence pembayaran_seq
CREATE SEQUENCE public.pembayaran_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

-- Sequence tiket_seq
CREATE SEQUENCE public.tiket_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1;

--
-- Membuat Tabel
--

-- Tabel admin
CREATE TABLE public.admin (
    id_admin character varying(20) NOT NULL,
    nama_admin character varying(50) NOT NULL,
    username character varying(100) NOT NULL,
    password character varying(100),
    phone_number character varying(20) NOT NULL,
    CONSTRAINT admin_pkey PRIMARY KEY (id_admin),
    CONSTRAINT admin_username_key UNIQUE (username)
);

ALTER TABLE public.admin OWNER TO postgres;

-- Tabel kapal
CREATE TABLE public.kapal (
    id_kapal character varying(20) NOT NULL,
    nama_kapal character varying(30) NOT NULL,
    tujuan character varying(20) NOT NULL,
    kapasitas character varying(10) NOT NULL,
    CONSTRAINT kapal_pkey PRIMARY KEY (id_kapal)
);

ALTER TABLE public.kapal OWNER TO postgres;

-- Tabel kelas
CREATE TABLE public.kelas (
    id_kelas integer NOT NULL DEFAULT nextval('public.kelas_id_kelas_seq'::regclass),
    jenis_kelas character varying(20) NOT NULL,
    cabin character varying(50) NOT NULL,
    CONSTRAINT kelas_pkey PRIMARY KEY (id_kelas)
);

ALTER TABLE public.kelas OWNER TO postgres;

-- Tabel pelanggan
CREATE TABLE public.pelanggan (
    id_pelanggan character varying(10) NOT NULL,
    phone_number character varying(15) NOT NULL,
    username character varying(50) NOT NULL,
    password text NOT NULL,
    status smallint DEFAULT 0,
    fullname character varying(30) NOT NULL,
    birthdate date NOT NULL,
    email character varying(100),
    nik character varying(50) NOT NULL,
    CONSTRAINT email_check CHECK (((email)::text ~* '^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\.[A-Za-z]{2,}$'::text)),
    CONSTRAINT pelanggan_status_check CHECK ((status = ANY (ARRAY[0, 1]))),
    CONSTRAINT pelanggan_pkey PRIMARY KEY (id_pelanggan),
    CONSTRAINT pelanggan_username_key UNIQUE (username),
    CONSTRAINT email_unique UNIQUE (email)
);

ALTER TABLE public.pelanggan OWNER TO postgres;

-- Tabel schedule
CREATE TABLE public.schedule (
    id_schedule integer NOT NULL DEFAULT nextval('public.schedule_id_schedule_seq'::regclass),
    day character varying(10) NOT NULL,
    dep_time time without time zone NOT NULL,
    arr_time time without time zone NOT NULL,
    id_kapal character varying(10) NOT NULL,
    id_kelas integer NOT NULL,
    CONSTRAINT schedule_pkey PRIMARY KEY (id_schedule),
    CONSTRAINT fk_kapal FOREIGN KEY (id_kapal) REFERENCES public.kapal(id_kapal) ON UPDATE CASCADE,
    CONSTRAINT fk_kelas FOREIGN KEY (id_kelas) REFERENCES public.kelas(id_kelas)
);

ALTER TABLE public.schedule OWNER TO postgres;

-- Tabel pembayaran
CREATE TABLE public.pembayaran (
    id_pembayaran character varying(10) NOT NULL DEFAULT nextval('public.pembayaran_seq'::regclass),
    kode_pembayaran character varying(50) NOT NULL,
    metode_pembayaran character varying(50) NOT NULL,
    penyedia_pembayaran character varying(50) NOT NULL,
    id_pelanggan character varying(10) NOT NULL,
    id_admin character varying(20) NOT NULL,
    CONSTRAINT pembayaran_pkey PRIMARY KEY (id_pembayaran),
    CONSTRAINT fk_pembayaran_pelanggan FOREIGN KEY (id_pelanggan) REFERENCES public.pelanggan(id_pelanggan) ON DELETE CASCADE,
    CONSTRAINT fk_pembayaran_admin FOREIGN KEY (id_admin) REFERENCES public.admin(id_admin) ON DELETE CASCADE
);

ALTER TABLE public.pembayaran OWNER TO postgres;

-- Tabel tiket
CREATE TABLE public.tiket (
    id_tiket character varying(10) NOT NULL DEFAULT nextval('public.tiket_seq'::regclass),
    seat character varying(10) NOT NULL,
    net_price numeric(10,2) NOT NULL,
    id_schedule integer NOT NULL,
    id_pelanggan character varying(10) NOT NULL,
    id_pembayaran character varying(10) NOT NULL,
    CONSTRAINT tiket_pkey PRIMARY KEY (id_tiket),
    CONSTRAINT fk_tiket_schedule FOREIGN KEY (id_schedule) REFERENCES public.schedule(id_schedule) ON DELETE CASCADE,
    CONSTRAINT fk_tiket_pelanggan FOREIGN KEY (id_pelanggan) REFERENCES public.pelanggan(id_pelanggan) ON DELETE CASCADE,
    CONSTRAINT fk_tiket_pembayaran FOREIGN KEY (id_pembayaran) REFERENCES public.pembayaran(id_pembayaran) ON DELETE CASCADE
);

ALTER TABLE public.tiket OWNER TO postgres;

--
-- Mengatur Kepemilikan Sequence Setelah Tabel Dibuat
--

ALTER SEQUENCE public.kelas_id_kelas_seq OWNED BY public.kelas.id_kelas;
ALTER SEQUENCE public.schedule_id_schedule_seq OWNED BY public.schedule.id_schedule;

--
-- Membuat Fungsi
--

-- Fungsi generate_id_admin
CREATE FUNCTION public.generate_id_admin() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    new_id VARCHAR(10);
BEGIN
    new_id := 'admin-' || LPAD(NEXTVAL('admin_seq')::TEXT, 3, '0');
    NEW.id_admin := new_id;
    RETURN NEW;
END;
$$;

ALTER FUNCTION public.generate_id_admin() OWNER TO postgres;

-- Fungsi generate_id_kapal
CREATE FUNCTION public.generate_id_kapal() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    new_id VARCHAR(10);
BEGIN
    new_id := 'kpl-' || LPAD(NEXTVAL('kapal_seq')::TEXT, 3, '0');
    NEW.id_kapal := new_id;
    RETURN NEW;
END;
$$;

ALTER FUNCTION public.generate_id_kapal() OWNER TO postgres;

-- Fungsi generate_id_pelanggan
CREATE FUNCTION public.generate_id_pelanggan() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    new_id VARCHAR(10);
BEGIN
    new_id := 'CUS-' || LPAD(NEXTVAL('pelanggan_seq')::TEXT, 3, '0');
    NEW.id_pelanggan := new_id;
    RETURN NEW;
END;
$$;

ALTER FUNCTION public.generate_id_pelanggan() OWNER TO postgres;

-- Fungsi generate_id_pembayaran
CREATE FUNCTION public.generate_id_pembayaran() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    new_id VARCHAR(10);
BEGIN
    new_id := 'PMB-' || LPAD(NEXTVAL('pembayaran_seq')::TEXT, 3, '0');
    NEW.id_pembayaran := new_id;
    RETURN NEW;
END;
$$;

ALTER FUNCTION public.generate_id_pembayaran() OWNER TO postgres;

-- Fungsi generate_id_tiket
CREATE FUNCTION public.generate_id_tiket() RETURNS trigger
    LANGUAGE plpgsql
    AS $$
DECLARE
    new_id VARCHAR(10);
BEGIN
    new_id := 'TKT-' || LPAD(NEXTVAL('tiket_seq')::TEXT, 3, '0');
    NEW.id_tiket := new_id;
    RETURN NEW;
END;
$$;

ALTER FUNCTION public.generate_id_tiket() OWNER TO postgres;

--
-- Membuat Trigger
--

-- Trigger admin_id_trigger
CREATE TRIGGER admin_id_trigger 
BEFORE INSERT ON public.admin 
FOR EACH ROW 
WHEN ((NEW.id_admin IS NULL)) 
EXECUTE FUNCTION public.generate_id_admin();

-- Trigger kapal_id_trigger
CREATE TRIGGER kapal_id_trigger 
BEFORE INSERT ON public.kapal 
FOR EACH ROW 
WHEN ((NEW.id_kapal IS NULL)) 
EXECUTE FUNCTION public.generate_id_kapal();

-- Trigger pelanggan_id_trigger
CREATE TRIGGER pelanggan_id_trigger 
BEFORE INSERT ON public.pelanggan 
FOR EACH ROW 
WHEN ((NEW.id_pelanggan IS NULL)) 
EXECUTE FUNCTION public.generate_id_pelanggan();

-- Trigger pembayaran_id_trigger
CREATE TRIGGER pembayaran_id_trigger 
BEFORE INSERT ON public.pembayaran 
FOR EACH ROW 
WHEN ((NEW.id_pembayaran IS NULL)) 
EXECUTE FUNCTION public.generate_id_pembayaran();

-- Trigger tiket_id_trigger
CREATE TRIGGER tiket_id_trigger 
BEFORE INSERT ON public.tiket 
FOR EACH ROW 
WHEN ((NEW.id_tiket IS NULL)) 
EXECUTE FUNCTION public.generate_id_tiket();

--
-- Menyisipkan Data Contoh
--

-- Data untuk admin
INSERT INTO public.admin (id_admin, nama_admin, username, password, phone_number) VALUES
('admin-001', 'baskoro', 'baskoro123', 'admin1', '08123456789');

-- Data untuk kapal
INSERT INTO public.kapal (id_kapal, nama_kapal, tujuan, kapasitas) VALUES
('kpl-001', 'Andromeda', 'Bandung', '1200'),
('kpl-002', 'Budiono Siregar', 'Gresik', '1400'),
('kpl-003', 'Ferrydom', 'Semarang', '1100'),
('kpl-004', 'Kamikaze', 'Gresik', '800'),
('kpl-005', 'Lautan Indah', 'Semarang', '2200'),
('kpl-006', 'Laut Bahari', 'Banten', '1000'),
('kpl-007', 'Laut Cakrawala', 'Bali', '950'),
('kpl-008', 'Natuna', 'Lombok', '150'),
('kpl-009', 'North Quay', 'Bali', '900'),
('kpl-010', 'Nusantara', 'Paciran', '1800'),
('kpl-011', 'Timur Sejahtera', 'Bandung', '800'),
('kpl-012', 'Utopia', 'Madura', '1100'),
('kpl-013', 'Wisata Bahari', 'Banten', '1300');

-- Data untuk kelas
INSERT INTO public.kelas (id_kelas, jenis_kelas, cabin) VALUES
(1, 'ekonomi', 'A1'),
(2, 'bisnis', 'A2'),
(3, 'First Class', 'A3');

-- Data untuk pelanggan
INSERT INTO public.pelanggan (id_pelanggan, phone_number, username, password, status, fullname, birthdate, email, nik) VALUES
('CUS-007', '08912817281', 'pewdipie', 'pdiddy', 0, 'Paul Diddy', '2003-05-06', 'pauldiddy1@example.com', '352431219211002'),
('CUS-008', '081234567890', 'andiwijaya95', 'pass1234', 0, 'Andi Wijaya', '1995-01-15', 'andi.wijaya@example.com', '1234567890123456'),
('CUS-009', '081234567891', 'budi_santoso', 'pass1234', 0, 'Budi Santoso', '1992-02-20', 'budi.santoso@example.com', '2234567890123456'),
('CUS-010', '081234567892', 'citra.d', 'pass1234', 0, 'Citra Dewi', '1990-03-10', 'citra.dewi@example.com', '3234567890123456'),
('CUS-011', '081234567893', 'dewianggra98', 'pass1234', 0, 'Dewi Anggraini', '1998-04-25', 'dewi.anggraini@example.com', '4234567890123456'),
('CUS-012', '081234567894', 'ekapratama94', 'pass1234', 0, 'Eka Pratama', '1994-05-30', 'eka.pratama@example.com', '5234567890123456'),
('CUS-013', '081234567895', 'fikri_hsn', 'pass1234', 0, 'Fikri Hasan', '1996-06-18', 'fikri.hasan@example.com', '6234567890123456'),
('CUS-014', '081234567896', 'gitapus91', 'pass1234', 0, 'Gita Puspita', '1991-07-22', 'gita.puspita@example.com', '7234567890123456'),
('CUS-015', '081234567897', 'hadikur_93', 'pass1234', 0, 'Hadi Kurnia', '1993-08-14', 'hadi.kurnia@example.com', '8234567890123456'),
('CUS-016', '081234567898', 'indahlestari', 'pass1234', 0, 'Indah Lestari', '1989-09-05', 'indah.lestari@example.com', '9234567890123456'),
('CUS-017', '081234567899', 'jokoryadi88', 'pass1234', 0, 'Joko Riyadi', '1988-10-11', 'joko.riyadi@example.com', '1034567890123456'),
('CUS-018', '081234567900', 'putra_kwn95', 'pass1234', 0, 'Kurniawan Putra', '1995-11-19', 'kurniawan.putra@example.com', '1134567890123456'),
('CUS-019', '081234567901', 'lestari_dew97', 'pass1234', 0, 'Lestari Dewi', '1997-12-24', 'lestari.dewi@example.com', '1234567891123456'),
('CUS-020', '081234567902', 'maya_sari92', 'pass1234', 0, 'Maya Sari', '1992-01-06', 'maya.sari@example.com', '1334567890123456'),
('CUS-021', '081234567903', 'nurul_huda90', 'pass1234', 0, 'Nurul Huda', '1990-02-14', 'nurul.huda@example.com', '1434567890123456'),
('CUS-022', '081234567904', 'oki_prasetya87', 'pass1234', 0, 'Oki Prasetya', '1987-03-22', 'oki.prasetya@example.com', '1534567890123456'),
('CUS-023', '081234567905', 'pandu_s89', 'pass1234', 0, 'Pandu Setiawan', '1989-04-13', 'pandu.setiawan@example.com', '1634567890123456'),
('CUS-024', '081234567906', 'rina_sftr96', 'pass1234', 0, 'Rina Safitri', '1996-05-25', 'rina.safitri@example.com', '1734567890123456'),
('CUS-025', '081234567907', 'siti.aminah94', 'pass1234', 0, 'Siti Aminah', '1994-06-17', 'siti.aminah@example.com', '1834567890123456'),
('CUS-026', '081234567908', 'taufik_hdy93', 'pass1234', 0, 'Taufik Hidayat', '1993-07-30', 'taufik.hidayat@example.com', '1934567890123456'),
('CUS-027', '081234567909', 'usman_halim91', 'pass1234', 0, 'Usman Halim', '1991-08-15', 'usman.halim@example.com', '2034567890123456'),
('CUS-006', '08821341211', 'akbarhann', '1234', 1, 'Akbar', '2006-12-28', 'pddy123@example.com', '12345');

-- Data untuk schedule
INSERT INTO public.schedule (id_schedule, day, dep_time, arr_time, id_kapal, id_kelas) VALUES
(1, 'Monday', '08:00:00', '15:00:00', 'kpl-001', 3),
(2, 'Monday', '13:00:00', '17:00:00', 'kpl-002', 2),
(3, 'Monday', '17:00:00', '21:00:00', 'kpl-003', 1),
(4, 'Monday', '21:00:00', '01:00:00', 'kpl-004', 1),
(5, 'Tuesday', '08:00:00', '12:00:00', 'kpl-005', 2),
(6, 'Tuesday', '13:00:00', '17:00:00', 'kpl-006', 1),
(7, 'Tuesday', '17:00:00', '21:00:00', 'kpl-007', 2),
(8, 'Tuesday', '21:00:00', '01:00:00', 'kpl-008', 3),
(9, 'Wednesday', '08:00:00', '12:00:00', 'kpl-009', 3),
(10, 'Wednesday', '13:00:00', '17:00:00', 'kpl-010', 2),
(11, 'Wednesday', '17:00:00', '02:00:00', 'kpl-011', 3),
(12, 'Wednesday', '21:00:00', '01:00:00', 'kpl-012', 1),
(13, 'Thursday', '08:00:00', '12:00:00', 'kpl-001', 3),
(14, 'Thursday', '13:00:00', '17:00:00', 'kpl-002', 2),
(15, 'Thursday', '17:00:00', '21:00:00', 'kpl-003', 1),
(16, 'Thursday', '21:00:00', '01:00:00', 'kpl-004', 1),
(17, 'Friday', '08:00:00', '12:00:00', 'kpl-005', 3),
(18, 'Friday', '13:00:00', '17:00:00', 'kpl-006', 2),
(19, 'Friday', '17:00:00', '21:00:00', 'kpl-007', 1),
(20, 'Friday', '21:00:00', '01:00:00', 'kpl-008', 3),
(21, 'Saturday', '08:00:00', '12:00:00', 'kpl-009', 3),
(22, 'Saturday', '13:00:00', '17:00:00', 'kpl-010', 2),
(23, 'Saturday', '17:00:00', '21:00:00', 'kpl-011', 3),
(24, 'Saturday', '21:00:00', '01:00:00', 'kpl-012', 1);

--
-- Mengatur Nilai Sequence
--

SELECT pg_catalog.setval('public.admin_seq', 1, true);
SELECT pg_catalog.setval('public.kapal_seq', 28, true);
SELECT pg_catalog.setval('public.kelas_id_kelas_seq', 3, true);
SELECT pg_catalog.setval('public.kelas_seq', 1, false);
SELECT pg_catalog.setval('public.pelanggan_seq', 27, true);
SELECT pg_catalog.setval('public.schedule_id_schedule_seq', 24, true);
SELECT pg_catalog.setval('public.pembayaran_seq', 10, true);
SELECT pg_catalog.setval('public.tiket_seq', 10, true);

--
-- Menyisipkan Data Contoh untuk pembayaran
--

INSERT INTO public.pembayaran (id_pembayaran, kode_pembayaran, metode_pembayaran, penyedia_pembayaran, id_pelanggan, id_admin) VALUES
('PMB-001', 'KP001', 'Credit Card', 'Visa', 'CUS-007', 'admin-001'),
('PMB-002', 'KP002', 'Bank Transfer', 'BCA', 'CUS-008', 'admin-001'),
('PMB-003', 'KP003', 'E-Wallet', 'GoPay', 'CUS-009', 'admin-001'),
('PMB-004', 'KP004', 'Credit Card', 'MasterCard', 'CUS-010', 'admin-001'),
('PMB-005', 'KP005', 'Bank Transfer', 'Mandiri', 'CUS-011', 'admin-001'),
('PMB-006', 'KP006', 'E-Wallet', 'OVO', 'CUS-012', 'admin-001'),
('PMB-007', 'KP007', 'Credit Card', 'Amex', 'CUS-013', 'admin-001'),
('PMB-008', 'KP008', 'Bank Transfer', 'BNI', 'CUS-014', 'admin-001'),
('PMB-009', 'KP009', 'E-Wallet', 'DANA', 'CUS-015', 'admin-001'),
('PMB-010', 'KP010', 'Credit Card', 'JCB', 'CUS-016', 'admin-001');

--
-- Menyisipkan Data Contoh untuk tiket
--

INSERT INTO public.tiket (id_tiket, seat, net_price, id_schedule, id_pelanggan, id_pembayaran) VALUES
('TKT-001', 'A1', 150000.00, 1, 'CUS-007', 'PMB-001'),
('TKT-002', 'A2', 150000.00, 2, 'CUS-008', 'PMB-002'),
('TKT-003', 'B1', 120000.00, 3, 'CUS-009', 'PMB-003'),
('TKT-004', 'B2', 120000.00, 4, 'CUS-010', 'PMB-004'),
('TKT-005', 'C1', 100000.00, 5, 'CUS-011', 'PMB-005'),
('TKT-006', 'C2', 100000.00, 6, 'CUS-012', 'PMB-006'),
('TKT-007', 'D1', 80000.00, 7, 'CUS-013', 'PMB-007'),
('TKT-008', 'D2', 80000.00, 8, 'CUS-014', 'PMB-008'),
('TKT-009', 'E1', 60000.00, 9, 'CUS-015', 'PMB-009'),
('TKT-010', 'E2', 60000.00, 10, 'CUS-016', 'PMB-010');

--
-- PostgreSQL database dump complete
--
